drop all objects ;
CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id int  PRIMARY KEY,
    name   varchar NOT NULL,
    CONSTRAINT mpa_pk PRIMARY KEY (mpa_id)

);
CREATE TABLE IF NOT EXISTS film
(
    film_id      int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name         varchar                              NOT NULL,
    description  varchar,
    release_date date                                 NOT NULL,
    duration     int                                  NOT NULL,
    mpa_id       int,
    CONSTRAINT film_pk PRIMARY KEY (film_id),
    CONSTRAINT mpa_fk FOREIGN KEY (mpa_id) REFERENCES mpa

);



CREATE TABLE IF NOT EXISTS genre
(
    genre_id int  PRIMARY KEY,
    name     varchar NOT NULL,
    CONSTRAINT genre_pk PRIMARY KEY (genre_id)

);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  int NOT NULL,
    genre_id int NOT NULL,
    CONSTRAINT film_genre_film_fk FOREIGN KEY (film_id) REFERENCES film,
    CONSTRAINT film_genre_genre_fk FOREIGN KEY (genre_id) REFERENCES genre
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    login    varchar                              NOT NULL,
    name     varchar                              NOT NULL,
    email    varchar                              NOT NULL,
    birthday date                                 NOT NULL,
    CONSTRAINT user_pk PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS film_likes
(
    film_id int NOT NULL,
    user_id int NOT NULL,
    CONSTRAINT film_like_film_fk FOREIGN KEY (film_id) REFERENCES film,
    CONSTRAINT film_like_user_fk FOREIGN KEY (user_id) REFERENCES users
);

CREATE TABLE IF NOT EXISTS user_friend
(
    user_id   int NOT NULL,
    friend_id int NOT NULL,
    CONSTRAINT user_friend_user_fk FOREIGN KEY (user_id) REFERENCES users,
    CONSTRAINT user_friend_friend_fk FOREIGN KEY (friend_id) REFERENCES users
);